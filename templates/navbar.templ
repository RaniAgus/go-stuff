package templates

import "strings"

type NavbarProps struct {
  Brand    NavbarBrand
  Elements []NavbarElement
  Links    []NavbarSocialLink
}

type NavbarBrand struct {
	Link string
	Icon Template
	Text string
}

type NavbarElement struct {
	Link  string
	Text  string
	Items []NavbarElement
}

type NavbarSocialLink struct {
	Link string
	Icon Template
}

templ Navbar(props NavbarProps) {
	@NavbarMenu() {
		@NavbarBrandLink(props.Brand.Link) {
			@NavbarBrandIcon(props.Brand.Icon)
			@NavbarBrandText(props.Brand.Text)
		}
		@NavbarMenuList() {
			for _, element := range props.Elements {
				if element.Items == nil {
					@NavbarMenuItem() {
						@NavbarMenuLink(element.Link) {
							{ element.Text }
              if strings.HasPrefix(element.Link, "http") {
                @IconExternalLink(templ.Attributes{
                  "class": "min-h-3 h-3 text-neutral-200",
                })
              }
						}
					}
				} else {
					// Group
				}
			}
		}
		@NavbarMenuSocialList() {
			for _, link := range props.Links {
				@NavbarMenuSocialItem() {
					@NavbarMenuSocialLink(link.Link) {
						@NavbarMenuSocialIcon(link.Icon)
					}
				}
			}
		}
	}
}

templ NavbarMenu(attrs ...templ.Attributes) {
	<header class={ "h-[--navbar-size] w-screen top-0 fixed flex flex-row justify-end gap-4 bg-neutral-900 text-neutral-200", class(attrs) } { props(attrs)... }>
		{ children... }
	</header>
}

// Brand
templ NavbarBrandLink(href string, attrs ...templ.Attributes) {
	<a href={ templ.URL(href) } class={ "h-full flex flex-row items-center gap-2 mr-auto px-8", class(attrs) } { props(attrs)... }>
		{ children... }
	</a>
}

templ NavbarBrandIcon(icon Template, attrs ...templ.Attributes) {
	@icon(append(attrs, templ.Attributes{
    "class": "min-w-6 w-6 mx-0 my-6",
  })...)
}

templ NavbarBrandText(text string, attrs ...templ.Attributes) {
	<span class={ "text-lg font-bold", class(attrs) } { props(attrs)... }>
		{ text }
	</span>
}

// Menu

templ NavbarMenuList(attrs ...templ.Attributes) {
	<ul class={ "flex flex-row items-center gap-5", class(attrs) } { props(attrs)... }>
		{ children... }
	</ul>
}

templ NavbarMenuItem(attrs ...templ.Attributes) {
	<li class={ "flex justify-center w-full opacity-70 hover:opacity-100", class(attrs) } { props(attrs)... }>
		{ children... }
	</li>
}

templ NavbarMenuLink(href string, attrs ...templ.Attributes) {
	<a href={ templ.URL(href) } class={ "flex flex-row items-center gap-1 w-full text-base", class(attrs) } { props(attrs)... }>
		{ children... }
	</a>
}

// Social

templ NavbarMenuSocialList(attrs ...templ.Attributes) {
	<ul class={ "flex flex-row items-center gap-4 px-8", class(attrs) } { props(attrs)... }>
		{ children... }
	</ul>
}

templ NavbarMenuSocialItem(attrs ...templ.Attributes) {
	<li class={ "flex justify-center w-full", class(attrs) } { props(attrs)... }>
		{ children... }
	</li>
}

templ NavbarMenuSocialLink(href string, attrs ...templ.Attributes) {
	<a href={ templ.URL(href) } class={ "w-full opacity-70 hover:opacity-100 transition-opacity", class(attrs) } { props(attrs)... }>
		{ children... }
	</a>
}

templ NavbarMenuSocialIcon(icon Template, attrs ...templ.Attributes) {
	@icon(append(attrs, templ.Attributes{
    "class": "min-h-5 h-5 text-neutral-200",
  })...)
}
