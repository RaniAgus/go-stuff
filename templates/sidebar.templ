package templates

type SidebarElement struct {
	Icon Template
	Text string
	Link string
}

templ Sidebar(elements []SidebarElement) {
	@SidebarMenu() {
		@SidebarMenuList() {
			for _, element := range elements {
				@SidebarMenuItem() {
					@SidebarMenuLink(element.Link) {
						@SidebarMenuIcon(element.Icon)
						@SidebarMenuText() {
							{element.Text}
						}
					}
				}
			}
		}
	}
}

templ SidebarMenu(attrs ...templ.Attributes) {
	<aside class={"group/sidebar bottom-0 sm:bottom-auto h-20 sm:h-screen w-screen sm:w-20 fixed bg-neutral-800 sm:hover:w-64 sm:transition-[width] sm:duration-200 sm:ease-in-out", class(attrs)} {props(attrs)...}>
		{children...}
	</aside>
}

templ SidebarMenuList(attrs ...templ.Attributes) {
	<ul class={"flex flex-row sm:flex-col items-center h-full", class(attrs)} {props(attrs)...}>
		{children...}
	</ul>
}

templ SidebarMenuItem(attrs ...templ.Attributes) {
	<li class={"w-full last:mt-auto", class(attrs)} {props(attrs)...}>
		{children...}
	</li>
}

templ SidebarMenuLink(href string, attrs ...templ.Attributes) {
	<a href={templ.URL(href)} class={"flex justify-center sm:justify-start items-center h-20 text-neutral-200 grayscale hover:grayscale-0 opacity-70 hover:opacity-100 duration-500", class(attrs)} {props(attrs)...}>
		{children...}
	</a>
}

templ SidebarMenuIcon(icon Template) {
  @icon(templ.Attributes{
    "class": "min-w-8 w-8 mx-6 my-0",
    "primary": "text-fuchsia-300",
    "secondary": "text-fuchsia-400",
  })
}

templ SidebarMenuText(attrs ...templ.Attributes) {
	<span class={"hidden ml-4 sm:group-hover/sidebar:block", class(attrs)} {props(attrs)...}>
		{children...}
	</span>
}
