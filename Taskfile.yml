version: "3"

dotenv:
  - .env

vars:
  DBSTRING: postgresql://{{.POSTGRES_USER}}:{{.POSTGRES_PASSWORD}}@{{.POSTGRES_HOST}}:{{.POSTGRES_PORT}}/{{.POSTGRES_DB}}

tasks:
  default:
    cmds:
      - ag -l . | entr -r task run

  run:
    deps:
      - migrate
      - generate
    sources:
      - "**/*.go"
    cmds:
      - go run cmd/go-starter/main.go

  seed:
    deps:
      - sqlc
    cmds:
      - go run cmd/seeder/main.go

  generate:
    deps:
      - sqlc
      - templ
      - tailwindcss

  sqlc:
    sources:
      - data/queries/**/*.sql
      - sqlc.yaml
    cmds:
      - sqlc generate
    generates:
      - data/sqlc/**/*.go

  templ:
    sources:
      - web/templates/*.templ
    cmds:
      - templ generate
    generates:
      - web/templates/**/*_templ.go

  tailwindcss:
    sources:
      - web/templates/**/*.templ
      - tailwind.config.js
      - tailwind.css
    cmds:
      - tailwindcss -i ./tailwind.css -o ./web/static/css/tailwind.min.css --minify
    generates:
      - web/static/css/tailwind.min.css

  migrate:
    sources:
      - data/migrations/**/*.sql
    cmds:
      - goose -dir data/migrations postgres "{{.DBSTRING}}" up

  add-migration:
    requires:
      vars:
        - "NAME"
    cmds:
      - goose -dir data/migrations postgres "{{.DBSTRING}}" create "{{.NAME}}" sql

  build:
    deps:
      - migrate
      - generate
    sources:
      - "**/*.go"
    generates:
      - bin/go-starter
    cmds:
      - go build -C cmd/go-starter -o {{.PWD}}/bin/go-starter

  clean:
    cmds:
      - rm -rfv data/sqlc
      - find . -type f -name '*_templ.go' | xargs --no-run-if-empty rm -rfv
      - rm -rfv web/static/css/tailwind.min.css
      - rm -rfv bin/go-starter
